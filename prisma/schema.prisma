// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(255)
  surname   String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  cpf       String   @unique @db.Char(11)
  gender    String   @db.Char(1)
  birthDate DateTime @db.Timestamp(6)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
  addressId String   @db.Uuid
  address   Address  @relation(fields: [addressId], references: [id])
  houses    House[]
}

model ProviderPreferences {
  id                 String         @id @default(uuid()) @db.Uuid
  animals            Boolean
  neighborhoods      Neighborhood[]
  maximumMetersBuilt Int
}

model House {
  id          String  @id @default(uuid()) @db.Uuid
  addressId   String  @db.Uuid
  address     Address @relation(fields: [addressId], references: [id])
  metersBuilt Int
  ownerId     String  @db.Uuid
  owner       User    @relation(fields: [ownerId], references: [id])
}

model State {
  id     String @id @default(uuid()) @db.Uuid
  name   String @db.VarChar(255)
  uf     String @db.VarChar(2)
  cities City[]
}

model City {
  id            String         @id @default(uuid()) @db.Uuid
  name          String         @db.VarChar(255)
  stateId       String         @db.Uuid
  state         State          @relation(fields: [stateId], references: [id])
  neighborhoods Neighborhood[]
}

model Neighborhood {
  id                    String               @id @default(uuid()) @db.Uuid
  name                  String               @db.VarChar(255)
  cityId                String               @db.Uuid
  city                  City                 @relation(fields: [cityId], references: [id])
  address               Address[]
  ProviderPreferences   ProviderPreferences? @relation(fields: [providerPreferencesId], references: [id])
  providerPreferencesId String?              @db.Uuid
}

model Address {
  id             String       @id @default(uuid()) @db.Uuid
  description    String       @db.VarChar(255)
  number         String?      @db.VarChar(6)
  neighborhoodId String       @db.Uuid
  neighborhood   Neighborhood @relation(fields: [neighborhoodId], references: [id])
  user           User[]
  House          House[]
}
